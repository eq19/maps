name: Build devcontainer
description: Build a devcontainer that is compliant with the spec

branding:
  icon: "activity"
  color: "green"

inputs:
  docker_hub_username:
    description: Username for Docker Hub
    required: true
  docker_hub_token:
    description: Docker Hub authentication token
    required: true
  image_name:
    description: "Name for the container to be created. Example: nginx"
    required: true
  image_tag:
    description: Tag to use for the new image
    required: true
  dockerfile_path:
    description: Path to the dockerfile from which to build the image
    required: true
  build_args:
    description: Build args
    required: false
    default: ""
  docker_hub_repo_short_description:
    description: Short description text for the docker hub repo
    required: true
  docker_hub_repo_readme_file_path:
    description: |
      Path of the md file which will be used as the docker hub repo readme
    required: true
  cache_src:
    description: Path for the docker cache source
    required: false
    default: /tmp/.buildx-cache
  cache_dest:
    description: Path for the docker cache destination
    required: false
    default: /tmp/.buildx-cache-new

runs:
  using: composite
  steps:
    - name: ðŸ’Ž Set Credential
      id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: ${{ inputs.credentials }}

    - name: ðŸ’Ž Authentication
      uses: 'google-github-actions/setup-gcloud@v2'
      with:
        install_components: 'alpha,cloud-datastore-emulator'

    - name: ðŸ’Ž Variables
      id: variables
      shell: bash
      run: |
        repo_name=${{ inputs.docker_hub_username }}/${{ inputs.image_name }}
        image_tag=${{ inputs.image_tag }}
        dev_image_tag="$image_tag"
        repo_ref="$repo_name:$image_tag"
        image_ref="${{ inputs.image_name }}:$image_tag"
        dev_repo_ref="$repo_name:$dev_image_tag"
        dev_image_ref="${{ inputs.image_name }}:$dev_image_tag"

        echo "repo_name=$repo_name" >> $GITHUB_OUTPUT
        echo "image_tag=$image_tag" >> $GITHUB_OUTPUT
        echo "dev_image_tag=$dev_image_tag" >> $GITHUB_OUTPUT
        echo "repo_ref=$repo_ref" >> $GITHUB_OUTPUT
        echo "image_ref=$image_ref" >> $GITHUB_OUTPUT
        echo "dev_repo_ref=$dev_repo_ref" >> $GITHUB_OUTPUT
        echo "dev_image_ref=$dev_image_ref" >> $GITHUB_OUTPUT

        gcloud info
        array=`gcloud compute instances list --format=json`
        if [ "$array" != "[]" ]; then gcloud compute instances delete instance-template --zone=us-central1-a --quiet; fi

    - name: Set Docker Hub description
      uses: peter-evans/dockerhub-description@v4
      with:
        username: ${{ inputs.docker_hub_username }}
        password: ${{ inputs.docker_hub_token }}
        repository: ${{ steps.variables.outputs.repo_name }}
        short-description: ${{ inputs.docker_hub_repo_short_description }}
        readme-filepath: ${{ inputs.docker_hub_repo_readme_file_path }}
