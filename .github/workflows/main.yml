# ⚠️ Main Workflow of eQuantum Project
name: Build and deploy eQuantum site

on:
  push:
    paths:
      - '.*/**'
      - '!**/reserves/**'
  workflow_run:
    types: [completed]
    workflows: ["pages-build-deployment"]

# Allow concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

# Set GITHUB_TOKEN scopes
permissions: write-all
        
# Global environtment variables
env:
  RUN: ${{ github.run_id }}
  USER: ${{ github.actor }}
  REPO: ${{ github.repository }}
  OWNER: ${{ github.repository_owner }}
  ACTOR: ${{ github.triggering_actor }}
  
jobs:
  determine-runner:
    runs-on: self-hosted
    steps:
      - name: 📂 Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          
      - name: 🪂 Pre-build Maps
        #uses: eq19/maps@v2
        uses: eq19/grammar@v1

      - name: 🚀 Build Feed on Linux
        if: runner.os == 'Ubuntu'
        #uses: eq19/feed@v3
        uses: eq19/syntax@v2
  
      - name: 🔧 Setup Lexer on Cloud
        uses: eq19/parser@v1
        #uses: eq19/lexer@v1

    outputs:
      runner: ${{ steps.set-runner.outputs.use-runner }}

  github-pages:
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        #node_version: [8, 10, 12]
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    #runs-on: ${{ fromJson(needs.determine-runner.outputs.runner) }}
    #needs: determine-runner
    # Runs on workflow_run.conclusion
    if: ${{github.event_name == 'push' ||
        github.event.workflow_run.conclusion == 'success'}}

    steps:
      - name: 📂 Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.ACCESS_TOKEN }}

      - name: ⚙️ Setup Parser
        uses: eq19/maps@v2
        #uses: eq19/parser@v1
        with:
          image_name: prime
          token: ${{ secrets.ACCESS_TOKEN }}
          docker_hub_username: ${{ github.actor }}
          docker_hub_token: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: ♻️ Evaluate Syntax
        uses: eq19/feed@v3
        #uses: eq19/syntax@v2
        id: build-image
        with:
          image_tag: "middles"
          credentials: ${{ secrets.GCP_CREDENTIALS }}

      - name: 🏃‍♂️ Set Grammar Rules
        uses: eq19/lexer@v1
        #uses: eq19/grammar@v1
        id: set-runner
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          credentials: ${{ secrets.GCP_CREDENTIALS }}
