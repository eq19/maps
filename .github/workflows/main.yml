# ⚠️ Main Workflow of eQuantum Project
name: Build and deploy eQuantum site

on:
  push:
    #paths:
      #- '.github/**'
      #- '!**/reserves/**'
  workflow_run:
    types: [completed]
    workflows: ["pages-build-deployment"]

# Allow concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

# Set GITHUB_TOKEN scopes
permissions: write-all
        
# Global environtment variables
env:
  RUN: ${{ github.run_id }}
  USER: ${{ github.actor }}
  REPO: ${{ github.repository }}
  OWNER: ${{ github.repository_owner }}
  ACTOR: ${{ github.triggering_actor }}
  
jobs:
  determine-runner:
    runs-on: ubuntu-latest

    steps:
      - name: 📂 Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          
      - name: 🪂 Pre-build Maps
        #if: runner.os == 'Windows'
        uses: eq19/maps@v2
        with:
          image_name: "prime"
          image_tag: "latest"
          token: ${{ secrets.ACCESS_TOKEN }}
          docker_hub_username: ${{ github.actor }}
          docker_hub_token: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: 🚀 Build Feed on Linux
        #if: runner.os == 'Windows'
        uses: eq19/feed@v3
        with:
          credentials: ${{ secrets.GCP_CREDENTIALS }}
  
      - name: 🔧 Setup Lexer on Cloud
        uses: eq19/lexer@v1
        id: set-runner
        with:
          repository: ${{ github.repository }}
          token: ${{ secrets.ACCESS_TOKEN }}
          credentials: ${{ secrets.GCP_CREDENTIALS }}

    outputs:
      runner: ${{ steps.set-runner.outputs.use-runner }}

  github-pages:
    needs: determine-runner

    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        #node_version: [8, 10, 12]
        os: [windows-latest, self-hosted]

    runs-on: ${{ matrix.os }}
    #runs-on: ${{ fromJson(needs.determine-runner.outputs.runner) }}
    
    # Runs on workflow_run.conclusion
    if: ${{github.event_name == 'push' ||
        github.event.workflow_run.conclusion == 'success'}}

    steps:
      - name: 📂 Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.ACCESS_TOKEN }}

      - name: ⚙️ Setup Parser
        uses: eq19/parser@v1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}

      - name: ♻️ Evaluate Syntax
        if: runner.os == 'Ubuntu'
        uses: eq19/syntax@v2

      - name: 🏃‍♂️ Set Grammar Rules
        #if: runner.os == 'Windows'
        uses: eq19/grammar@v1

      - name: 🏃‍♂️ Set Grammar Rules
        if: runner.os != 'Windows'
        run: |
          service --status-all
          apt-cache show supervisor
        shell: bash
